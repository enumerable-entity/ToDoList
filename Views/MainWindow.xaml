<Window x:Class="ToDoList.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:ToDoList"
        xmlns:ViewModels="clr-namespace:ToDoList.ViewsModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:local2="clr-namespace:ToDoList.Infrastructure"
        xmlns:converter="clr-namespace:ToDoList.Infrastructure.Converters"
        d:DataContext="{d:DesignInstance Type=ViewModels:MainViewModel}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Toddy"
        Width="{Binding WindowWidth, Mode=TwoWay}"
        Height="{Binding WindowHeight, Mode=TwoWay}"
        MinWidth="800"
        MinHeight="500"
        Name="MainWindowRoot">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        <converter:BoolToVisibilityConverterInverted x:Key="VisibleIfFalseConverter" />
    </Window.Resources>
    <Grid x:Name="MainGrid"
          ShowGridLines="False">

        <Grid.RowDefinitions>
            <RowDefinition Height="35pt" />
            <RowDefinition Height="35pt" />
            <RowDefinition />
            <RowDefinition Height="auto" />
            <RowDefinition Height="50pt" />
            <RowDefinition Height="50pt" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding SpliterPosition, Mode=TwoWay, UpdateSourceTrigger=Default}"
                              MinWidth="150pt"
                              MaxWidth="250pt" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="4*"
                              MinWidth="570" />
        </Grid.ColumnDefinitions>

        <GridSplitter Grid.Column="1"
                      ShowsPreview="False"
                      Width="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Grid.RowSpan="6" />


        <WrapPanel Grid.Row="0"
                   Grid.Column="2"
                   HorizontalAlignment="Right"
                   Margin="40,0,0,0"
                   Orientation="Horizontal"
                   VerticalAlignment="Center"
                   Height="auto"
                   Width="auto">
            <Label Content="Dark mode"
                   Margin="0,0,9,0"
                   FontSize="14"
                   IsEnabled="True">

            </Label>
            <ToggleButton Margin="0,0,10,0"
                          x:Name="SwithcColorModeButton"
                          Style="{StaticResource MaterialDesignSwitchToggleButton}"
                          IsChecked="{Binding Path=IsDarkModeEnabled, Mode=TwoWay}"
                          ToolTip="Switch to Light mode">
                <materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                    <SolidColorBrush Color="Black" />
                </materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                    <SolidColorBrush Color="White" />
                </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
            </ToggleButton>
        </WrapPanel>



        <materialDesign:Card Grid.Column="0"
                             Grid.Row="1"
                             Margin="10,0,10,0"
                             Padding="0,7pt,0,7pt"
                             VerticalContentAlignment="Center"
                             VerticalAlignment="Center">
            <materialDesign:Card.InputBindings>
                <MouseBinding Command="{Binding ShowMyDayTasksCommand}"
                              MouseAction="LeftClick"></MouseBinding>
            </materialDesign:Card.InputBindings>
            <DockPanel LastChildFill="True">
                <materialDesign:PackIcon  DockPanel.Dock="Left"
                                          Foreground="{StaticResource PrimaryHueMidBrush}"
                                          Kind="Home"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Height="19pt"
                                          Width="19pt"
                                          Margin="05,0,0,0" />

                <TextBlock DockPanel.Dock="Right"
                           Text="My daily tasks"
                           FontSize="13pt"
                           Margin="5pt,4,0,0" />
            </DockPanel>
        </materialDesign:Card>

        <TreeView Grid.Column="0"
                  Grid.Row="2"
                  Name="treeView"
                  ItemsSource="{Binding TreeViewCategories, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  AllowDrop="True"
                  MinWidth="220"
                  Margin="0,10pt,0,0"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True">
            <TreeView.Resources>
                <Style  TargetType="TreeViewItem"
                        BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                    <Setter Property="materialDesign:TreeViewAssist.ExpanderSize"
                            Value="30" />
                    <Setter Property="materialDesign:TreeViewAssist.ShowSelection"
                            Value="True" />
                </Style>
                <local2:ContextMenuDataContextProxy x:Key="DataContextProxyy"
                                                    Data="{Binding}" />
            </TreeView.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"
                                           CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding RenameTreeViewItemCommand}"
                                           CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}" />
                </i:EventTrigger>

            </i:Interaction.Triggers>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Width="auto"
                              Command="{Binding Source={StaticResource DataContextProxyy}, Path=Data.DeleteTreeViewItemCommand}">

                        <MenuItem.Header>
                            <TextBlock Text="Delete"
                                       FontSize="13pt"
                                       Margin="10,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <materialDesign:PackIcon  Kind="Trash"
                                                      Foreground="{StaticResource PrimaryHueMidBrush}"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      Height="15pt"
                                                      Width="15pt"
                                                      Margin="0" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>

            </TreeView.ContextMenu>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding TaskLists,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <HierarchicalDataTemplate.ItemTemplate>
                        <HierarchicalDataTemplate>

                            <WrapPanel Orientation="Horizontal">

                                <materialDesign:PackIcon  Foreground="{StaticResource PrimaryHueMidBrush}"
                                                          Kind="ClipboardListOutline"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"
                                                          Height="15pt"
                                                          Width="15pt"
                                                          Margin="30,0,0,0" />

                                <TextBlock Text="{Binding Title}"
                                           FontSize="11pt"
                                           Margin="5,0,0,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Visibility="{Binding Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfFalseConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}">

                                </TextBlock>
                                <TextBox Text="{Binding ElementName=MainWindowRoot, 
                                                        Path=DataContext.EditedTasksListTitile,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         materialDesign:HintAssist.Hint="{Binding Title}"
                                         Visibility="{Binding    
                                                            Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfTrueConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="{Binding ElementName=MainWindowRoot, Path=DataContext.FinishRenameTreeViewItemCommand}"
                                                    CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}"
                                                    Key="Return" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </WrapPanel>

                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                    <WrapPanel  Orientation="Horizontal">
                        <materialDesign:PackIcon  Kind="FolderText"
                                                  Foreground="{StaticResource PrimaryHueMidBrush}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Height="15pt"
                                                  Width="15pt"
                                                  Margin="0" />

                        <TextBlock Text="{Binding Title}"
                                   FontSize="13pt"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Visibility="{Binding Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfFalseConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}" />
                        <TextBox Text="{Binding ElementName=MainWindowRoot, 
                                                        Path=DataContext.EditedCategoryTitile,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                 materialDesign:HintAssist.Hint="{Binding Title}"
                                 Visibility="{Binding    Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfTrueConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding ElementName=MainWindowRoot, Path=DataContext.FinishRenameTreeViewItemCommand}"
                                            CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}"
                                            Key="Return" />
                            </TextBox.InputBindings>
                        </TextBox>

                    </WrapPanel>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}"
                       BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                    <Setter Property="HorizontalAlignment"
                            Value="Left" />
                    <Setter Property="materialDesign:TreeViewAssist.ExpanderSize"
                            Value="30" />
                    <Setter Property="materialDesign:TreeViewAssist.ShowSelection"
                            Value="True" />
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Width="auto"
                                          Command="{Binding Source={StaticResource DataContextProxyy}, Path=Data.DeleteTreeViewItemCommand}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Delete"
                                                   FontSize="13pt"
                                                   Margin="10,0,0,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center" />
                                    </MenuItem.Header>
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon  Kind="Trash"
                                                                  Foreground="{StaticResource PrimaryHueMidBrush}"
                                                                  VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center"
                                                                  Height="15pt"
                                                                  Width="15pt"
                                                                  Margin="0" />
                                    </MenuItem.Icon>
                                </MenuItem>

                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <!-- ====================================================================================================================-->
        <Label 
            Content="There is no tasks.Great!"
            Grid.Column="2"
            Grid.Row="2"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               FontSize="16">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" 
                            Value="Collapsed">
                        
                    </Setter>
                    <Setter Property="Foreground"
                            Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedTaskListItems.Count}"
                                     Value="0">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
            
        </Label>
        <DockPanel Margin="0,0,0,0"
                   Grid.Column="2"
                   Grid.Row="1">
            <CheckBox DockPanel.Dock="Left"
                      Height="34pt"
                      Margin="5pt,0,15pt,0"
                      Style="{StaticResource MaterialDesignFilterChipPrimaryCheckBox}"
                      IsChecked="{Binding ShowOnlyInProgres, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="Show only in progress" />

            <ComboBox DockPanel.Dock="Left"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:HintAssist.Hint="Sort by"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      Width="160"
                      Height="45">
                <ComboBox.SelectedItem>
                    <Binding Path="TaskListSelectedSorting"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged">
                    </Binding>
                </ComboBox.SelectedItem>
                <ComboBoxItem>
                    Date ascending
                </ComboBoxItem>
                <ComboBoxItem>
                    Date descending
                </ComboBoxItem>
                <ComboBoxItem>
                    Status
                </ComboBoxItem>
            </ComboBox>

            <TextBox    Text="{Binding Path=TaskFilterSubString, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Right"
                        Margin="0,0,10,0"
                        Style="{StaticResource MaterialDesignFilledTextBox}"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        Width="200"
                        MaxWidth="400"
                        materialDesign:HintAssist.Hint="Find todo's" />

        </DockPanel>

        <ListBox Name="MainList"
                 Margin="0,60,10,0"
                 Grid.Column="2"
                 Grid.Row="1"
                 Grid.RowSpan="3"
                 ItemsSource="{Binding SelectedTasksView}"
                 SelectedItem="{Binding SelectedTask, UpdateSourceTrigger=PropertyChanged}"
                 Width="auto"
                 BorderThickness="0"
                 HorizontalContentAlignment="Stretch"
                 dd:DragDrop.IsDragSource="True">
            <ListBox.Resources>
                <local2:ContextMenuDataContextProxy x:Key="DataContextProxy"
                                                    Data="{Binding}" />
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card Height="40pt"
                                         HorizontalAlignment="Stretch"
                                         Width="{Binding ElementName=MainList, Path=Width, Mode=OneWay}"
                                         x:Name="ListCard">
                        <DockPanel LastChildFill="True"
                                   HorizontalAlignment="Stretch">
                            <Button DockPanel.Dock="Left"
                                    Background="{x:Null}"
                                    BorderBrush="{x:Null}"
                                    HorizontalContentAlignment="Center"
                                    FlowDirection="LeftToRight"
                                    Width="30"
                                    Padding="0,0,0,0"
                                    Margin="13,0,13,0"
                                    Command="{Binding ElementName=MainWindowRoot, Path=DataContext.ChangeTaskStatusCommand}"
                                    CommandParameter="{Binding}">

                                <materialDesign:PackIcon Background="Transparent"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Center"
                                                         Height="25pt"
                                                         Width="25pt">
                                    <materialDesign:PackIcon.Style>
                                        <Style TargetType="materialDesign:PackIcon"
                                               BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource PrimaryHueMidBrush}" />
                                            <Setter Property="Kind"
                                                    Value="RadioboxBlank" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCompleted}"
                                                             Value="true">
                                                    <Setter Property="Foreground"
                                                            Value="Gray" />
                                                    <Setter Property="Kind"
                                                            Value="CheckCircle" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </materialDesign:PackIcon.Style>
                                </materialDesign:PackIcon>
                            </Button>
                            <TextBlock  Text="{Binding CompleteDate, StringFormat=d}"
                                        DockPanel.Dock="Right"
                                        Width="60pt"
                                        VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCompleted}"
                                                         Value="true">
                                                <Setter Property="Foreground"
                                                        Value="Gray" />
                                                <Setter Property="TextDecorations"
                                                        Value="Strikethrough" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>



                            <materialDesign:PackIcon  Kind="Calendar"
                                                      DockPanel.Dock="Right"
                                                      VerticalAlignment="Center"
                                                      Height="20"
                                                      Width="20"
                                                      Margin="10,0,5,0">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon"
                                           BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource PrimaryHueMidBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCompleted}"
                                                         Value="true">
                                                <Setter Property="Foreground"
                                                        Value="Gray" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CompleteDate}"
                                                         Value="{x:Null}">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>

                            <TextBlock TextWrapping="Wrap"
                                       VerticalAlignment="Center"
                                       FontSize="12"
                                       Text="{Binding Content}"
                                       Visibility="{Binding Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfFalseConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCompleted}"
                                                         Value="true">
                                                <Setter Property="TextDecorations"
                                                        Value="Strikethrough" />
                                                <Setter Property="Foreground"
                                                        Value="Gray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </TextBlock.Style>
                            </TextBlock>
                            <TextBox TextWrapping="Wrap"
                                     VerticalAlignment="Center"
                                     FontSize="12"
                                     Text="{Binding ElementName=MainWindowRoot, Path=DataContext.EditedTaskContent,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding    
                                                            Path=IsInEditMode,
                                                            Converter={StaticResource VisibleIfTrueConverter},
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            Mode=TwoWay}">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding ElementName=MainWindowRoot, Path=DataContext.FinishRenameTaskCommand}"
                                                CommandParameter="{Binding ElementName=MainList, Path=SelectedItem}"
                                                Key="Return" />
                                </TextBox.InputBindings>
                            </TextBox>

                        </DockPanel>
                    </materialDesign:Card>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Width="auto"
                                          Command="{Binding Source={StaticResource DataContextProxy}, Path=Data.DeleteTaskCommand}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Delete"
                                                   FontSize="13pt"
                                                   Margin="10,0,0,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center" />
                                    </MenuItem.Header>
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon  Kind="Trash"
                                                                  Foreground="{StaticResource PrimaryHueMidBrush}"
                                                                  VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center"
                                                                  Height="15pt"
                                                                  Width="15pt"
                                                                  Margin="0" />
                                    </MenuItem.Icon>
                                </MenuItem>

                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding RenameTaskCommand}"
                                           CommandParameter="{Binding ElementName=MainList, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>


        <materialDesign:Card Grid.Column="2"
                             Grid.Row="5"
                             Margin="10,5,10,5"
                             UniformCornerRadius="0">
            <DockPanel LastChildFill="True">
                <materialDesign:PackIcon  DockPanel.Dock="Left"
                                          Kind="PlusCircle"
                                          Foreground="{StaticResource PrimaryHueMidBrush}"
                                          Grid.Column="0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Height="25pt"
                                          Width="25pt"
                                          Margin="10pt,0,0,0" />
                <Button ToolTip="Add new item to list"
                        Command="{Binding AddNewTaskCommand}"
                        DockPanel.Dock="Right"
                        Grid.Column="2"
                        Content="Add"
                        HorizontalContentAlignment="Center"
                        FlowDirection="LeftToRight"
                        Margin="0,0,10pt,0"
                        Width="60pt" />
                <DatePicker Width="80pt"
                            Margin="0pt,0pt,8pt,7pt"
                            SelectedDate="{Binding NewTaskDate, UpdateSourceTrigger=PropertyChanged}"
                            DockPanel.Dock="Right"
                            materialDesign:HintAssist.Hint="Pick Date"
                            materialDesign:TextFieldAssist.HasClearButton="True"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                <TextBox x:Name="new_task_text_box"
                         Text="{Binding NewTaskContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         materialDesign:HintAssist.Hint="What you want to do? "
                         SpellCheck.IsEnabled="True"
                         Grid.Column="1"
                         TextWrapping="WrapWithOverflow"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="10pt,0,10pt,0"
                         MaxLength="128">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding AddNewTaskCommand}"
                                    Key="Return" />
                    </TextBox.InputBindings>
                </TextBox>
            </DockPanel>
            <!--Add new category region-->
        </materialDesign:Card>
        <materialDesign:Card Grid.Column="0"
                             Grid.Row="5"
                             Margin="10,5,10,5"
                             UniformCornerRadius="0">
            <DockPanel LastChildFill="True">
                <Button x:Name="add_new_category"
                        Command="{Binding AddNewCategoryCommand}"
                        ToolTip="Add new item to list"
                        DockPanel.Dock="Right"
                        Grid.Column="2"
                        HorizontalContentAlignment="Center"
                        FlowDirection="LeftToRight"
                        Margin="0,0,5pt,0"
                        Width="25pt"
                        Padding="0">
                    <Button.Content>
                        <materialDesign:PackIcon  DockPanel.Dock="Left"
                                                  Kind="FolderCheck"
                                                  Grid.Column="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Height="15pt"
                                                  Width="15pt" />
                    </Button.Content>
                </Button>

                <TextBox Text="{Binding NewCategoryTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         materialDesign:HintAssist.Hint="New category"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         SpellCheck.IsEnabled="False"
                         Grid.Column="1"
                         TextWrapping="WrapWithOverflow"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="10pt,0,10pt,15"
                         MaxLength="25">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding AddNewCategoryCommand}"
                                    Key="Return" />
                    </TextBox.InputBindings>
                </TextBox>

            </DockPanel>
        </materialDesign:Card>

        <StackPanel Grid.Column="0"
                    Grid.Row="4"
                    Margin="10,5,10,5">
            <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     Text="{Binding NewTaskListTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Top"
                     AcceptsReturn="False"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Hidden"
                     materialDesign:HintAssist.Hint="New ToDo's list"
                     MaxLines="1"
                     MaxLength="25">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding AddNewTaskListCommand}"
                                Key="Return" />
                </TextBox.InputBindings>
            </TextBox>
        </StackPanel>
        <DockPanel Grid.ColumnSpan="2"
                   Grid.Column="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="Menu">
                    <MenuItem Header="Exit">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ExitToApp" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Options">
                    <MenuItem Header="About">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="About" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </DockPanel>
    </Grid>

</Window>
